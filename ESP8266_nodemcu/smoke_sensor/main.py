import machineimport socketimport timeimport json#Pin and leds definitionspin_led_red_id = 2pin_led_green_id = 4pin_buzzer_id = 5#Pin connected to sensor definitionspin_d0_id = 0pin_a0_id = 0sensor_level = 100pin_d0 = machine.Pin(pin_d0_id, machine.Pin.IN)pin_a0 = machine.ADC(pin_a0_id)pin_led_red = machine.Pin(pin_led_red_id, machine.Pin.OUT)pin_led_green = machine.Pin(pin_led_green_id, machine.Pin.OUT)pin_buzzer = machine.Pin(pin_buzzer_id, machine.Pin.OUT)s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.bind(('192.168.1.1', 80))s.listen(5)while True:	conn, addr = s.accept()	print("Got a connection from %s" % str(addr))	conn_file = conn.makefile('rwb', 0)	while True:		line = conn_file.readline()		if not line or line == b'\r\n': 			break	pin_d0_value = pin_d0.value()	pin_a0_value = pin_a0.read()	if(pin_a0_value > sensor_level):		pin_led_red.on()		pin_led_green.off()		pin_buzzer.on()	else:		pin_led_red.off()		pin_led_green.on()		pin_buzzer.off()	time.sleep(0.1)	response = json.dumps([{'pin_d0_value': pin_d0_value}, {'pin_a0_value': pin_a0_value}, {'pin_led_red': pin_led_red.value()}, {'pin_led_green': pin_led_green.value()}, {'pin_buzzer': pin_buzzer.value()}]) 	conn.send('HTTP/1.0 200 OK\r\n') 	conn.send("Content-Type: application/json\r\n\r\n") 	conn.send(response) 	conn.close()